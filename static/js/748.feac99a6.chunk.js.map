{"version":3,"file":"static/js/748.feac99a6.chunk.js","mappings":"yNA8CA,UA1CoB,WAClB,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEQC,GAAOC,EAAAA,EAAAA,MAAPD,GAmBR,OAjBAE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAGA,IAAMG,EAAY,mCAAG,gHAIPC,EAAAA,EAAAA,IAAmBJ,GAJZ,gBAGPK,EAHO,EAGfC,KAAQD,QAEVN,EAAWM,GALM,gDAOjBE,QAAQC,IAAI,KAAMC,SAPD,yDAAH,qDAUlBN,GAXC,CAYF,GAAE,CAACH,KAGF,8BACsB,IAAnBF,EAAQY,QACP,sEAEA,wBACGZ,EAAQa,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASb,EAAS,EAATA,GAC/B,OACE,2BACE,qCAAaY,MACb,uBAAIC,MAFGb,EAKZ,OAKV,C,oKC1CKc,EAAM,mCACZC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAsB,WACjC,OAAOD,EAAAA,EAAAA,GAAM,sBAAuB,CAClCE,OAAQ,CACNC,QAASJ,EACTK,KAAM,IAGX,EAEYC,EAAsB,SAAAC,GACjC,OAAON,EAAAA,EAAAA,GAAM,gBAAiB,CAC5BE,OAAQ,CACNC,QAASJ,EACTK,KAAM,EACNG,SAAU,QACVC,eAAe,EACfF,MAAAA,IAGL,EACYG,EAAkB,SAAAxB,GAC7B,OAAOe,EAAAA,EAAAA,GAAM,UAAD,OAAWf,GAAM,CAC3BiB,OAAQ,CACNC,QAASJ,IAGd,EAEYW,EAAoB,SAAAzB,GAC/B,OAAOe,EAAAA,EAAAA,GAAM,UAAD,OAAWf,EAAX,YAAyB,CACnCiB,OAAQ,CACNC,QAASJ,IAGd,EACYV,EAAqB,SAAAJ,GAChC,OAAOe,EAAAA,EAAAA,GAAM,UAAD,OAAWf,EAAX,YAAyB,CACnCiB,OAAQ,CACNC,QAASJ,IAGd,C","sources":["pages/ReviewsPage/ReviewsPage.jsx","services/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesReviews } from 'services/api';\n\nconst ReviewsPage = () => {\n  const [reviews, setReviews] = useState([]);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    if (!id) {\n      return;\n    }\n    const fetchReviews = async () => {\n      try {\n        const {\n          data: { results },\n        } = await fetchMoviesReviews(id);\n        setReviews(results);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    fetchReviews();\n  }, [id]);\n\n  return (\n    <>\n      {reviews.length === 0 ? (\n        <p>We don't have any rewiews for this movie.</p>\n      ) : (\n        <ul>\n          {reviews.map(({ author, content, id }) => {\n            return (\n              <li key={id}>\n                <h4>Author: {author}</h4>\n                <p>{content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default ReviewsPage;\n","import axios from 'axios';\n\nconst KEY = '9225d40049583defe43ffc34168e4f8c';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = () => {\n  return axios('/trending/movie/day', {\n    params: {\n      api_key: KEY,\n      page: 1,\n    },\n  });\n};\n\nexport const fetchMoviesBySearch = query => {\n  return axios('/search/movie', {\n    params: {\n      api_key: KEY,\n      page: 1,\n      language: 'en-US',\n      include_adult: false,\n      query,\n    },\n  });\n};\nexport const fetchMoviesById = id => {\n  return axios(`/movie/${id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const fetchMoviesActors = id => {\n  return axios(`/movie/${id}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\nexport const fetchMoviesReviews = id => {\n  return axios(`/movie/${id}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n"],"names":["useState","reviews","setReviews","id","useParams","useEffect","fetchReviews","fetchMoviesReviews","results","data","console","log","message","length","map","author","content","KEY","axios","fetchTrendingMovies","params","api_key","page","fetchMoviesBySearch","query","language","include_adult","fetchMoviesById","fetchMoviesActors"],"sourceRoot":""}