{"version":3,"file":"static/js/322.0dee39d9.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/components/SerachMovieForm/SearchMovieForm.module.css?a10c","components/SerachMovieForm/SearchMovieForm.jsx","pages/MoviesPage/MoviesPage.jsx","services/api.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(({ id, title }) => {\n        return (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default MoviesList;\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchMovieForm_form__eTgHf\",\"button\":\"SearchMovieForm_button__5wUx4\",\"input\":\"SearchMovieForm_input__i9npi\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './SearchMovieForm.module.css';\n\nconst SearchMovieForm = ({ initialState, onSubmit }) => {\n  const [search, setSearch] = useState(`${initialState}`);\n\n  const handleChangeState = ({ currentTarget }) => {\n    setSearch(currentTarget.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ search });\n  };\n\n  //   resetSearch = () => {\n  //     this.setState({ search: '' });\n  //   };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <input\n        className={s.input}\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        name=\"search\"\n        value={search}\n        onChange={handleChangeState}\n        required\n      />\n      <button type=\"submit\" className={s.button}>\n        Search\n      </button>\n    </form>\n  );\n};\n\nexport default SearchMovieForm;\n\nSearchMovieForm.defaultProps = {\n  initialState: {\n    search: '',\n  },\n};\n\nSearchMovieForm.propsTypes = {\n  initialState: PropTypes.string,\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport SearchMovieForm from 'components/SerachMovieForm/SearchMovieForm';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { fetchMoviesBySearch } from 'services/api';\nimport { useSearchParams } from 'react-router-dom';\n\nconst MoviesPage = () => {\n  // const [search, setSearchValue] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('search');\n\n  useEffect(() => {\n    if (!search) {\n      return;\n    }\n    const fetchSearchingList = async () => {\n      try {\n        const {\n          data: { results },\n        } = await fetchMoviesBySearch(search);\n        // console.log(results);\n        setMovies(results);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    fetchSearchingList();\n  }, [search]);\n  const handlerSubmit = ({ search }) => {\n    setSearchParams({ search });\n  };\n  const setInitialState = () => {\n    if (!search) {\n      return '';\n    }\n    return search;\n  };\n\n  return (\n    <>\n      <SearchMovieForm\n        initialState={setInitialState()}\n        onSubmit={handlerSubmit}\n      />\n      <MoviesList movies={movies} />\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst KEY = '9225d40049583defe43ffc34168e4f8c';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = () => {\n  return axios('/trending/movie/day', {\n    params: {\n      api_key: KEY,\n      page: 1,\n    },\n  });\n};\n\nexport const fetchMoviesBySearch = query => {\n  return axios('/search/movie', {\n    params: {\n      api_key: KEY,\n      page: 1,\n      language: 'en-US',\n      include_adult: false,\n      query,\n    },\n  });\n};\nexport const fetchMoviesById = id => {\n  return axios(`/movie/${id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const fetchMoviesActors = id => {\n  return axios(`/movie/${id}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\nexport const fetchMoviesReviews = id => {\n  return axios(`/movie/${id}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["movies","location","useLocation","map","id","title","to","state","from","SearchMovieForm","initialState","onSubmit","useState","search","setSearch","className","s","e","preventDefault","type","autoComplete","autoFocus","placeholder","name","value","onChange","currentTarget","required","defaultProps","propsTypes","PropTypes","setMovies","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchSearchingList","fetchMoviesBySearch","results","data","console","log","message","MoviesList","KEY","axios","fetchTrendingMovies","params","api_key","page","query","language","include_adult","fetchMoviesById","fetchMoviesActors","fetchMoviesReviews","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}