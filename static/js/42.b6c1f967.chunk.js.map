{"version":3,"file":"static/js/42.b6c1f967.chunk.js","mappings":"4PACA,EAA4B,oCAA5B,EAAgF,wCAAhF,EAAgI,gCAAhI,EAAuK,+BAAvK,EAAoN,sC,SCiGpN,EAvFyB,WAAO,IAAD,EAC7B,GAAkCA,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MAEXC,GAAO,WADIC,EAAAA,EAAAA,MACKC,aAAT,eAAgBF,OAAQ,KACrCG,EAAAA,EAAAA,YAAU,WACR,GAAKP,EAAL,CAGA,IAAMQ,EAAgB,mCAAG,gHAEEC,EAAAA,EAAAA,IAAgBT,GAFlB,gBAEbU,EAFa,EAEbA,KACRX,EAAaW,GAHQ,gDAKrBC,QAAQC,IAAI,KAAMC,SALG,yDAAH,qDAQtBL,GATC,CAUF,GAAE,CAACR,IAsBJ,OACE,iCACE,mBACEc,KAAK,SACLC,UAAWC,EACXC,QAAS,kBAAMf,EAASE,EAAf,EAHX,qBAOCN,IACC,iBAAKiB,UAAWC,EAAhB,WACE,gBACEE,IAAG,gDAAoCpB,QAApC,IAAoCA,OAApC,EAAoCA,EAAWqB,aAClDC,IAAG,OAAEtB,QAAF,IAAEA,OAAF,EAAEA,EAAWuB,MAChBC,MAAM,SAER,4BACE,gBAAIP,UAAWC,EAAf,iBACGlB,QADH,IACGA,OADH,EACGA,EAAWuB,MADd,KAxBS,WACjB,GAAKvB,EAGL,OAAOA,EAAUyB,aAAaC,MAAM,EAAG,EACxC,CAoBgCC,GADvB,QAGA,eAAGV,UAAWC,EAAd,yBAjCU,WAClB,GAAKlB,EAGL,OAAkC,IAAzBA,EAAU4B,aAAsB,KAAKC,QAAQ,EACvD,CA4B4CC,GAAnC,QACA,eAAIb,UAAWC,EAAf,uBACA,cAAGD,UAAWC,EAAd,gBAAuBlB,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAW+B,YAClC,eAAId,UAAWC,EAAf,sBACA,eAAGD,UAAWC,EAAd,cA7CW,WACnB,GAAKlB,EAIL,OADeA,EAAUgC,OACXC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,IAAN,IAAYC,KAAK,KACrC,CAuCiCC,GAAxB,cAKN,oDAEE,yBACE,SAAC,KAAD,CAAMC,GAAG,OAAO9B,MAAO,CAAEF,KAAAA,GAAzB,qBAIF,yBACE,SAAC,KAAD,CAAMgC,GAAG,UAAU9B,MAAO,CAAEF,KAAAA,GAA5B,2BAKJ,SAAC,KAAD,MAGL,C,oKC/FKiC,EAAM,mCACZC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAsB,WACjC,OAAOD,EAAAA,EAAAA,GAAM,sBAAuB,CAClCE,OAAQ,CACNC,QAASJ,EACTK,KAAM,IAGX,EAEYC,EAAsB,SAAAC,GACjC,OAAON,EAAAA,EAAAA,GAAM,gBAAiB,CAC5BE,OAAQ,CACNC,QAASJ,EACTK,KAAM,EACNG,SAAU,QACVC,eAAe,EACfF,MAAAA,IAGL,EACYnC,EAAkB,SAAAT,GAC7B,OAAOsC,EAAAA,EAAAA,GAAM,UAAD,OAAWtC,GAAM,CAC3BwC,OAAQ,CACNC,QAASJ,IAGd,EAEYU,EAAoB,SAAA/C,GAC/B,OAAOsC,EAAAA,EAAAA,GAAM,UAAD,OAAWtC,EAAX,YAAyB,CACnCwC,OAAQ,CACNC,QAASJ,IAGd,EACYW,EAAqB,SAAAhD,GAChC,OAAOsC,EAAAA,EAAAA,GAAM,UAAD,OAAWtC,EAAX,YAAyB,CACnCwC,OAAQ,CACNC,QAASJ,IAGd,C","sources":["webpack://react-homework-template/./src/pages/MovieDetailsPage/MovieDetailsPage.module.css?9108","pages/MovieDetailsPage/MovieDetailsPage.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btnGoBack\":\"MovieDetailsPage_btnGoBack__9r7Vv\",\"mainContainer\":\"MovieDetailsPage_mainContainer__VXN49\",\"title\":\"MovieDetailsPage_title__63V3V\",\"text\":\"MovieDetailsPage_text__vp0Sm\",\"secondTitle\":\"MovieDetailsPage_secondTitle__EHAb6\"};","import { useState, useEffect } from 'react';\nimport {\n  Link,\n  Outlet,\n  useParams,\n  useNavigate,\n  useLocation,\n} from 'react-router-dom';\nimport { fetchMoviesById } from 'services/api';\nimport s from './MovieDetailsPage.module.css';\n\nconst MovieDetailsPage = () => {\n  const [movieInfo, setMovieInfo] = useState(null);\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = location.state?.from || '/';\n  useEffect(() => {\n    if (!id) {\n      return;\n    }\n    const fetchDetailsInfo = async () => {\n      try {\n        const { data } = await fetchMoviesById(id);\n        setMovieInfo(data);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    fetchDetailsInfo();\n  }, [id]);\n  const changeGenres = () => {\n    if (!movieInfo) {\n      return;\n    }\n    const genres = movieInfo.genres;\n    return genres.map(x => x.name).join(', ');\n  };\n\n  const changeScore = () => {\n    if (!movieInfo) {\n      return;\n    }\n    return ((movieInfo.vote_average * 100) / 100).toFixed(2);\n  };\n  const createYear = () => {\n    if (!movieInfo) {\n      return;\n    }\n    return movieInfo.release_date.slice(0, 4);\n  };\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        className={s.btnGoBack}\n        onClick={() => navigate(from)}\n      >\n        Go back\n      </button>\n      {movieInfo && (\n        <div className={s.mainContainer}>\n          <img\n            src={`https://image.tmdb.org/t/p/w500${movieInfo?.poster_path}`}\n            alt={movieInfo?.title}\n            width=\"250\"\n          />\n          <div>\n            <h3 className={s.title}>\n              {movieInfo?.title} ({createYear()})\n            </h3>\n            <p className={s.text}>User Score: {changeScore()}%</p>\n            <h4 className={s.secondTitle}>Overview</h4>\n            <p className={s.text}>{movieInfo?.overview}</p>\n            <h4 className={s.secondTitle}>Genres </h4>\n            <p className={s.text}> {changeGenres()} </p>\n          </div>\n        </div>\n      )}\n\n      <ul>\n        Additional information\n        <li>\n          <Link to=\"cast\" state={{ from }}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link to=\"reviews\" state={{ from }}>\n            Reviews\n          </Link>\n        </li>\n      </ul>\n      <Outlet />\n    </>\n  );\n};\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nconst KEY = '9225d40049583defe43ffc34168e4f8c';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = () => {\n  return axios('/trending/movie/day', {\n    params: {\n      api_key: KEY,\n      page: 1,\n    },\n  });\n};\n\nexport const fetchMoviesBySearch = query => {\n  return axios('/search/movie', {\n    params: {\n      api_key: KEY,\n      page: 1,\n      language: 'en-US',\n      include_adult: false,\n      query,\n    },\n  });\n};\nexport const fetchMoviesById = id => {\n  return axios(`/movie/${id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const fetchMoviesActors = id => {\n  return axios(`/movie/${id}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\nexport const fetchMoviesReviews = id => {\n  return axios(`/movie/${id}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n"],"names":["useState","movieInfo","setMovieInfo","id","useParams","navigate","useNavigate","from","useLocation","state","useEffect","fetchDetailsInfo","fetchMoviesById","data","console","log","message","type","className","s","onClick","src","poster_path","alt","title","width","release_date","slice","createYear","vote_average","toFixed","changeScore","overview","genres","map","x","name","join","changeGenres","to","KEY","axios","fetchTrendingMovies","params","api_key","page","fetchMoviesBySearch","query","language","include_adult","fetchMoviesActors","fetchMoviesReviews"],"sourceRoot":""}